What happens when you initialize a repository? Why do you need to do it?

	.git hidden directory is created in the directory, where we initialized a repository. We need the folder to store
all commits, but in fact it stores all changes made to the files. We need to do it to start saving the history, i.e. doing
version-control, which git is used for. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Maybe it's the area, which helps to save several versions of the files before actually committing them.
	Maybe it helps to save the file if you introduced some changes, but if they aren't logical enough to commit or too small, then you can just hold it there until the moment the change is good enough to commit.
	Maybe it helps to collect the files conveniently first and then commit them all at once.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?